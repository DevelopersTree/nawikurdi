{"id":"general.js","dependencies":[{"name":"/Users/hozan/Desktop/devstree/nawikurdi/API/package.json","includedInParent":true,"mtime":1590877042665}],"generated":{"js":"module.exports = {\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  debounce: function debounce(func, wait, immediate) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n};"},"sourceMaps":null,"error":null,"hash":"67a53b2cc1b82c58571b95c4c9af6e52","cacheData":{"env":{}}}